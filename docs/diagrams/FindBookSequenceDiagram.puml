@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":SmartLibParser" as SmartLibParser LOGIC_COLOR
participant ":FindBookCommandParser" as FindBookCommandParser LOGIC_COLOR
participant "findBookCommand:FindBookCommand" as FindBookCommand LOGIC_COLOR
participant "commandResult:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant ":FilteredList" as FilteredList MODEL_COLOR
end box

[-> LogicManager : execute("findbook Harry Potter")
activate LogicManager

LogicManager -> SmartLibParser : parseCommand("findbook Harry Potter")
activate SmartLibParser

create FindBookCommandParser
SmartLibParser -> FindBookCommandParser
activate FindBookCommandParser

FindBookCommandParser --> SmartLibParser
deactivate FindBookCommandParser

SmartLibParser -> FindBookCommandParser : parse("Harry Potter")
activate FindBookCommandParser

create FindBookCommand
FindBookCommandParser -> FindBookCommand
activate FindBookCommand

FindBookCommand --> FindBookCommandParser

FindBookCommandParser --> SmartLibParser : findBookCommand
deactivate FindBookCommandParser

FindBookCommandParser -[hidden]-> SmartLibParser
destroy FindBookCommandParser

SmartLibParser --> LogicManager : findBookCommand
deactivate SmartLibParser

LogicManager -> FindBookCommand : execute(model)
activate FindBookCommand

FindBookCommand -> Model : updateFilteredBookList(p)
activate Model

Model -> FilteredList : setPredicate(p)
activate FilteredList

FilteredList --> Model :
deactivate FilteredList

Model --> FindBookCommand
deactivate Model

create CommandResult
FindBookCommand -> CommandResult
activate CommandResult

CommandResult --> FindBookCommand
deactivate CommandResult

FindBookCommand --> LogicManager : commandResult
deactivate FindBookCommand

FindBookCommand -[hidden]-> LogicManager
destroy FindBookCommand

[<--LogicManager : commandResult
deactivate LogicManager
@enduml
