@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":HeyMatezParser" as HeyMatezParser LOGIC_COLOR
participant ":DoneTaskCommandParser" as DoneTaskCommandParser LOGIC_COLOR
participant "d:DoneTaskCommand" as DoneTaskCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("done 1")
activate LogicManager

LogicManager -> HeyMatezParser : parseCommand("done 1")
activate HeyMatezParser

create DoneTaskCommandParser
HeyMatezParser -> DoneTaskCommandParser
activate DoneTaskCommandParser

DoneTaskCommandParser --> HeyMatezParser
deactivate DoneTaskCommandParser

HeyMatezParser -> DoneTaskCommandParser : parse("1")
activate DoneTaskCommandParser

create DoneTaskCommand
DoneTaskCommandParser -> DoneTaskCommand
activate DoneTaskCommand

DoneTaskCommand --> DoneTaskCommandParser : d
deactivate DoneTaskCommand

DoneTaskCommandParser --> HeyMatezParser : d
deactivate DoneTaskCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
DoneTaskCommandParser -[hidden]-> HeyMatezParser
destroy DoneTaskCommandParser

HeyMatezParser --> LogicManager : d
deactivate HeyMatezParser

LogicManager -> DoneTaskCommand : execute()
activate DoneTaskCommand

DoneTaskCommand -> DoneTaskCommand : createDoneTask(taskToDone)
activate DoneTaskCommand

DoneTaskCommand --> DoneTaskCommand : doneTask
deactivate DoneTaskCommand

DoneTaskCommand -> Model : setTask(taskToDone, doneTask)
activate Model

Model --> DoneTaskCommand
deactivate Model

create CommandResult
DoneTaskCommand -> CommandResult
activate CommandResult

CommandResult --> DoneTaskCommand
deactivate CommandResult

DoneTaskCommand --> LogicManager : result
deactivate DoneTaskCommand

[<--LogicManager
deactivate LogicManager
@enduml
